name: HybridSE CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build Core
        run: |
          ./tools/hybridse_build.sh

      - name: Core Test
        run: |
          ./tools/hybridse_core_test.sh

      - name: Upload Cpp UT Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cpp-ut-result-${{ github.sha }}
          path: |
            build/*.xml

      - name: Java SDK Test
        run: |
          cd java/
          mvn -U clean compile test

      - name: Upload Java UT Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: java-ut-result-${{ github.sha }}
          path: |
            java/hybridse-sdk/target/**/TEST-*.xml

      - name: Create Archive
        if: ${{ github.event_name == 'push' }}
        env:
          OS: linux
          ARCH: x86_64
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            VERSION=$(echo $VERSION | sed -e 's/^v//')
            echo "HYBRIDSE_VERSION=$VERSION" >> $GITHUB_ENV
            HYBRIDSE_VERSION=$VERSION ./tools/hybridse_deploy.sh
          else
            # TODO: upload using action/upload-artifact
            ./tools/hybridse_deploy.sh
          fi

      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v1
        with:
          # TODO: add CHANGELOG.md and remove draft option
          draft: true
          files: |
            hybridse-${{ env.HYBRIDSE_VERSION }}-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-test-results:
    runs-on: ubuntu-latest
    needs: build
    # the action will only run on 4paradigm/HybridSE's context, not for fork repo or dependabot
    if: >
      always() && github.event_name == 'push' || (
      github.event.pull_request.head.repo.full_name == github.repository &&
      github.event.sender.login != 'dependabot[bot]' )
    steps:
      - name: Download Cpp Artifacts
        uses: actions/download-artifact@v2
        with:
          name: cpp-ut-result-${{ github.sha }}
          path: cpp-ut-result

      - name: Publish Cpp UT Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: cpp-ut-result/**/*.xml
          check_name: Cpp Test Report
          comment_title: Cpp Test Report

      - name: Download Java Artifacts
        uses: actions/download-artifact@v2
        with:
          name: java-ut-result-${{ github.sha }}
          path: java-ut-result

      - name: Publish Java UT Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: java-ut-result/**/*.xml
          check_name: Java Test Report
          comment_title: Java Test Report


  coverage:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest

    steps:
      - uses: actions/checkout@v2

      - name: Fetch Submodules
        run: |
          git submodule update --init --recursive

      - name: Build and Coverage
        run: |
          ./tools/compile_and_coverage.sh

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1
        with:
          files: build/coverage.info
          name: coverage
          fail_ci_if_error: true
          verbose: true

      # - name: benchmark
      #   run: |
      # cost too much time
      # bash tools/micro_bench.sh | tee micro_bench_report.txt
      # bash tools/gen_micro_bench_compare.sh
