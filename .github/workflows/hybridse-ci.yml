name: HybridSE CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  linux-build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build Core
        run: |
          ./tools/hybridse_build.sh

      - name: Core Test
        run: |
          ./tools/hybridse_core_test.sh

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: build/*.xml
          check_name: Cpp Test Report
          comment_title: Cpp Test Report

      - name: Java SDK Test
        run: |
          cd java/
          mvn -U clean compile test

      - name: Publish Java Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: java/hybridse-sdk/target/**/TEST-*.xml
          check_name: Java Test Report
          comment_title: Java Test Report

      - name: Create Archive
        if: ${{ github.event_name == 'push' }}
        env:
          OS: linux
          ARCH: x86_64
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            VERSION=$(echo $VERSION | sed -e 's/^v//')
            echo "HYBRIDSE_VERSION=$VERSION" >> $GITHUB_ENV
            HYBRIDSE_VERSION=$VERSION ./tools/hybridse_deploy.sh
          else
            # TODO: upload using action/upload-artifact
            ./tools/hybridse_deploy.sh
          fi

      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: softprops/action-gh-release@v1
        with:
          # TODO: add CHANGELOG.md and remove draft option
          draft: true
          files: |
            hybridse-${{ env.HYBRIDSE_VERSION }}-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/4paradigm/hybridsql:latest

    steps:
      - uses: actions/checkout@v2

      - name: Fetch Submodules
        run: |
          git submodule update --init --recursive

      - name: Build and Coverage
        run: |
          ./tools/compile_and_coverage.sh

      # - name: coverage report
      #   uses: romeovs/lcov-reporter-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     lcov-file: ./build/coverage.info

      # - name: benchmark
      #   run: |
      # cost too much time
      # bash tools/micro_bench.sh | tee micro_bench_report.txt
      # bash tools/gen_micro_bench_compare.sh
  macos-build:
    name: Build in MacOS
    runs-on: macos-latest
    env:
      CICD_RUNNER_THIRDPARTY_PATH: /Users/runner/thirdparty
      CICD_RUNNER_THIRDSRC_PATH: /Users/runner/thirdsrc
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Install thirdparty
        run: |
          brew install swig
          brew install gflags
          brew install glog
          brew install coreutils
          sh tools/install_thirdparty_mac.sh
      - name: Build Core
        run: |
          ./tools/hybridse_build.sh
      - name: Core Test
        run: |
          ./tools/hybridse_core_test.sh
#      - name: Publish Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        if: always()
#        with:
#          files: build/*.xml
#          check_name: Cpp Test Report
#          comment_title: Cpp Test Report
      - name: Java SDK Test
        run: |
          cd java/
          mvn -U clean compile test
#      - name: Publish Java Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        if: always()
#        with:
#          files: java/hybridse-sdk/target/**/TEST-*.xml
#          check_name: Java Test Report
#          comment_title: Java Test Report

      - name: Cleanup
        if: always()
        run: |
          git clean -dfx
          git submodule foreach 'rm -rf $displaypath'
